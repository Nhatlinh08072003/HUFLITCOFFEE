@model HUFLITCOFFEE.Models.Main.DetailViewModel;
@{
    string curPage = ViewBag.CurPage;
}
<link rel="stylesheet" href="~/css/detail.css">
<div class="pro-detail-main">
    <div class="pro-detail-container">
        <div class="pro-detail-category">
            <div class="cate-pro">
                <ol class="breadcrumb">
                    <li class="bd-cate">
                        <a href="~/product"><span>Menu</span></a>
                    </li>
                    <li class="bd-cate">
                        <a class="btn-menu" href="~/product/"><span>Coffee</span></a>
                        <a class="btn-menu" style="display: none" href="~/product/"><span>Tea</span></a>
                        <a class="btn-menu" style="display: none" href="~/product/"><span>Cloud</span></a>
                        <a class="btn-menu" style="display: none" href="~/product/"><span>Hitea-Healthy</span></a>
                        <a class="btn-menu" style="display: none" href="~/product/"><span>Trà xanh-Chocolate</span></a>
                        <a class="btn-menu" style="display: none" href="~/product/"><span>Thức uống đá xay</span></a>
                        <a class="btn-menu" style="display: none" href="~/product/"><span>Bánh & Snack</span></a>
                        <a class="btn-menu" style="display: none" href="~/product/"><span>Thưởng thức tại nhà</span></a>
                    </li>
                    <li class="bd-cate">
                        <a class="btn-menu-list" href="~/product"><span>Cà phê Highlight</span></a>
                        <a class="btn-menu-list" style="display: none" href="~/product"><span>Cà phê
                                Highlight</span></a>
                        <a class="btn-menu-list" style="display: none" href="~/product"><span>Cà phê
                                Highlight</span></a>
                    </li>
                </ol>
            </div>
        </div>

        <div class="pro-product">
            <div class="pro-product-img">
                <img class="img_pro" src="@Model.MainProduct?.ImgProduct">
            </div>
            <div class=" pro-prodcut-title">
                <div class="pro-title">
                    <div class="titleee">
                        <p>@Model.MainProduct?.NameProduct @Model.MainProduct?.Dvt</p>
                    </div>
                    <div class="pro-price">
                        <span id="mainProductPrice" data-base-price="@Model.MainProduct?.PriceProduct">
                            @Model.MainProduct?.PriceProduct đ
                        </span>
                    </div>
                    <div id="Name_Topping"></div>
                    <div id="Price_Topping"></div>
                </div>

                <div class="option-size">
                    <p class="size-text-tit">Chọn size ( bắt buộc) </p>
                    <div class="size-size">
                        <div class="size-zzz">
                            <div class="circle" onclick="redirectToSize('small')">Nhỏ + 0 đ</div>
                        </div>

                        <div class="size-zzz">
                            <div class="circle" onclick="redirectToSize('medium')">Vừa + 6000 đ</div>
                        </div>

                        <div class="size-zzz">
                            <div class="circle" onclick="redirectToSize('large')">Lớn + 10000 đ</div>
                        </div>
                    </div>
                </div>

                <div class="pro-topping">
                    <p class="pro-topping-title">Topping</p>
                    <div class="topping-option">
                        <div class="checkbox-topping">
                            <div class="topping-name">
                                <input type="checkbox" id="topping73" class="topping-checkbox"
                                    data-name="@Model.RelatedProducts?.FirstOrDefault(p => p.ProductId == 73)?.NameProduct"
                                    data-price="@Model.RelatedProducts?.FirstOrDefault(p => p.ProductId == 73)?.PriceProduct"
                                    onclick="updateToppingDetails()">
                                <label for="topping73" class="topping-text">@Model.RelatedProducts?.FirstOrDefault(p =>
                                    p.ProductId == 73)?.NameProduct + @Model.RelatedProducts?.FirstOrDefault(p =>
                                    p.ProductId == 73)?.PriceProduct đ</label>
                            </div>
                        </div>
                        <div class="checkbox-topping">
                            <div class="topping-name">
                                <input type="checkbox" id="topping74" class="topping-checkbox"
                                    data-name="@Model.RelatedProducts?.FirstOrDefault(p => p.ProductId == 74)?.NameProduct"
                                    data-price="@Model.RelatedProducts?.FirstOrDefault(p => p.ProductId == 74)?.PriceProduct"
                                    onclick="updateToppingDetails()">
                                <label for="topping74" class="topping-text">@Model.RelatedProducts?.FirstOrDefault(p =>
                                    p.ProductId == 74)?.NameProduct + @Model.RelatedProducts?.FirstOrDefault(p =>
                                    p.ProductId == 74)?.PriceProduct đ</label>
                            </div>
                        </div>
                        <div class="checkbox-topping">
                            <div class="topping-name">
                                <input type="checkbox" id="topping75" class="topping-checkbox"
                                    data-name="@Model.RelatedProducts?.FirstOrDefault(p => p.ProductId == 75)?.NameProduct"
                                    data-price="@Model.RelatedProducts?.FirstOrDefault(p => p.ProductId == 75)?.PriceProduct"
                                    onclick="updateToppingDetails()">
                                <label for="topping75" class="topping-text">@Model.RelatedProducts?.FirstOrDefault(p =>
                                    p.ProductId == 75)?.NameProduct + @Model.RelatedProducts?.FirstOrDefault(p =>
                                    p.ProductId == 75)?.PriceProduct đ</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="prooo-okok">
                    <div class="okokok">
                        <h3 class="title-okok">
                            Số Lượng:
                        </h3>
                        <div class="pro-quantity">
                            <div class="pro-number">
                                <div class="n-pre">
                                    <button class="pro-prevous">
                                        <p style="font-size: 30px;">-</p>
                                    </button>
                                    <span id="counter">1</span>
                                    <button class="pro-next">
                                        <p style="font-size: 30px;">+</p>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="pro-cart">
                    <div class="method-pro">
                        <a class="method-btn" href="/cart">
                            <button class="btn-des"><img style="width: 25px;"
                                    src="https://cdn-icons-png.flaticon.com/128/3523/3523885.png">Giỏ
                                hàng</button>
                        </a>
                        <a class="method-btn" href="/shipping">
                            <button class="btn-des"><img style="width: 30px;"
                                    src="https://cdn-icons-png.flaticon.com/128/5637/5637217.png"> Đặt giao tận
                                nơi</button>
                        </a>

                    </div>
                </div>
            </div>
        </div>

        <div class="pro-describe">
            <div class="describe">
                <h4 class="des-title">Mô tả sản phẩm</h4>
                <p class="des-text">@Model.MainProduct?.DescriptionProduct</p>

            </div>
        </div>

        <div class="related-product">
            <div class="related-pro-ct">
                <h4 class="title-rlt">Sản phẩm liên quan</h4>
                <div class="related-pro-list">
                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>

                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>

                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>

                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>

                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>
                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>
                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>
                    <div class="related-pro-box">
                        <div class="related-img">
                            <a href="/detail"> <img class="img img-rlt"
                                    src="https://product.hstatic.net/1000075078/product/1696220170_phin-sua-tuoi-banh-flan_0172beb85d08408b8912bf5f1dae7fd9.jpg"></a>
                        </div>
                        <div class="related-title">
                            <p class="tttl">Đường đen sữa đá</p>
                            <span class="related-price">49.000đ</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Xử lý cho kích thước
        const sizeOptions = document.querySelectorAll('.size-zzz');

        sizeOptions.forEach(option => {
            option.addEventListener('click', function () {
                // Xóa class 'selected' từ tất cả các tùy chọn kích thước
                sizeOptions.forEach(opt => opt.classList.remove('selected'));

                // Thêm class 'selected' vào tùy chọn kích thước được click
                option.classList.add('selected');
            });
        });

        // Xử lý cho topping
        const toppingOptions = document.querySelectorAll('.topping-name');

        toppingOptions.forEach(option => {
            option.addEventListener('click', function () {
                // Xóa class 'selected' từ tất cả các tùy chọn topping
                toppingOptions.forEach(opt => opt.classList.remove('selected'));

                // Thêm class 'selected' vào tùy chọn topping được click
                option.classList.add('selected');
            });
        });

        // Xử lý cho tăng giảm giá trị trong thẻ span
        const counter = document.getElementById('counter');
        const prevButton = document.querySelector('.pro-prevous');
        const nextButton = document.querySelector('.pro-next');
        const basePrice = parseFloat(document.getElementById('mainProductPrice').getAttribute('data-base-price'));

        prevButton.addEventListener('click', function () {
            let currentValue = parseInt(counter.textContent, 10);
            if (currentValue > 1) {
                currentValue--; // Giảm giá trị số lượng
                counter.textContent = currentValue; // Cập nhật số lượng trên giao diện
                updateTotalPrice(currentValue);
            } else if (currentValue === 1) { // Nếu giá trị hiện tại là 1
                counter.textContent = currentValue; // Cập nhật số lượng trên giao diện (để giữ nguyên số lượng 1)
                updateTotalPrice(currentValue);
            }
        });

        nextButton.addEventListener('click', function () {
            let currentValue = parseInt(counter.textContent, 10);
            currentValue++; // Tăng giá trị số lượng
            counter.textContent = currentValue; // Cập nhật số lượng trên giao diện
            updateTotalPrice(currentValue);
        });

        // Hàm cập nhật tổng giá sản phẩm dựa trên số lượng và topping
        function updateTotalPrice(quantity) {
            let totalToppingPrice = calculateTotalToppingPrice(); // Tính tổng giá của các topping đã chọn
            let totalPrice = basePrice * quantity + totalToppingPrice; // Tính tổng giá sản phẩm
            document.getElementById('mainProductPrice').textContent = totalPrice.toLocaleString('vi-VN') + ' .000 đ'; // Hiển thị giá sản phẩm
        }

        // Hàm tính tổng giá của các topping đã chọn
        function calculateTotalToppingPrice() {
            let totalToppingPrice = 0;
            document.querySelectorAll('.topping-checkbox:checked').forEach(function (item) {
                let price = parseFloat(item.getAttribute('data-price'));
                totalToppingPrice += price;
            });
            return totalToppingPrice;
        }

    });
    function getCurrentSize(productId) {
        if (productId % 3 === 1) {
            return 'small';
        } else if (productId % 3 === 2) {
            return 'medium';
        } else {
            return 'large';
        }
    }

    function redirectToSize(targetSize) {
        // Lấy URL hiện tại
        const currentUrl = window.location.href;

        // Lấy ID sản phẩm từ URL hiện tại
        const urlParts = currentUrl.split('/');
        const currentIdIndex = urlParts.indexOf('detail') + 1; // Giả định URL dạng /detail/id
        let productId = parseInt(urlParts[currentIdIndex]);

        // Kiểm tra nếu ID sản phẩm không phải là số thì không làm gì cả
        if (isNaN(productId)) {
            return;
        }

        // Xác định kích thước hiện tại
        const currentSize = getCurrentSize(productId);

        // Kiểm tra nếu kích thước hiện tại và kích thước mục tiêu giống nhau thì không làm gì cả
        if (currentSize === targetSize) {
            return;
        }

        // Tính toán ID mới dựa trên kích thước hiện tại và kích thước mục tiêu
        if (currentSize === 'small' && targetSize === 'medium') {
            productId += 1;
        } else if (currentSize === 'small' && targetSize === 'small') {
            productId += 0;
        }
        else if (currentSize === 'small' && targetSize === 'large') {
            productId += 2;
        } else if (currentSize === 'medium' && targetSize === 'small') {
            productId -= 1;
        }
        else if (currentSize === 'medium' && targetSize === 'medium') {
            productId -= 0;
        }
        else if (currentSize === 'medium' && targetSize === 'large') {
            productId += 1;
        } else if (currentSize === 'large' && targetSize === 'medium') {
            productId -= 1;
        } else if (currentSize === 'large' && targetSize === 'small') {
            productId -= 2;
        }
        else if (currentSize === 'large' && targetSize === 'large') {
            productId -= 0;
        }

        // Điều hướng đến trang chi tiết sản phẩm với ID mới
        urlParts[currentIdIndex] = productId;
        const newUrl = urlParts.join('/');
        window.location.href = newUrl;
    }
    // Hàm cập nhật chi tiết topping khi thay đổi
    function updateToppingDetails() {
        var selectedToppingNames = [];
        var totalToppingPrice = 0;
        var quantity = parseInt(counter.textContent, 10); // Lấy số lượng hiện tại

        document.querySelectorAll('.topping-checkbox:checked').forEach(function (item) {
            selectedToppingNames.push(item.getAttribute('data-name'));
            var price = parseFloat(item.getAttribute('data-price'));
            totalToppingPrice += price * 1; // Nhân giá của từng topping cho số lượng
        });

        document.getElementById('Name_Topping').innerText = selectedToppingNames.join(', ');

        var basePrice = parseFloat(document.getElementById('mainProductPrice').getAttribute('data-base-price'));
        var totalPrice = basePrice * quantity + totalToppingPrice; // Tính tổng giá sản phẩm
        document.getElementById('mainProductPrice').innerText = totalPrice.toLocaleString('vi-VN') + ' .000 đ'; // Hiển thị giá sản phẩm
    }




</script>
